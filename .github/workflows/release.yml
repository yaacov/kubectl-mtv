name: Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Multi-Platform Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Build kubectl-mtv multi-platform binaries and archives
        run: make dist-all
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: Build Go MCP servers and create release archives
        run: cd mcp-go && make dist-all
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: Upload kubectl-mtv release assets
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        with:
          files: |
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-amd64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-amd64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-arm64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-arm64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-amd64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-amd64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-arm64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-arm64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-windows-amd64.zip
            kubectl-mtv-${{ github.event.release.tag_name }}-windows-amd64.zip.sha256sum

      - name: Upload Go MCP server release assets
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        with:
          files: |
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-linux-amd64.tar.gz
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-linux-amd64.tar.gz.sha256sum
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-linux-arm64.tar.gz
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-linux-arm64.tar.gz.sha256sum
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-darwin-amd64.tar.gz
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-darwin-amd64.tar.gz.sha256sum
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-darwin-arm64.tar.gz
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-darwin-arm64.tar.gz.sha256sum
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-windows-amd64.zip
            mcp-go/dist/mcp-servers-${{ github.event.release.tag_name }}-windows-amd64.zip.sha256sum

      - name: Wait for assets to be available
        run: |
          echo "Waiting 30 seconds for GitHub to propagate release assets..."
          sleep 30

      - name: Verify all assets are available
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          ASSETS=(
            "kubectl-mtv-${VERSION}-linux-amd64.tar.gz"
            "kubectl-mtv-${VERSION}-linux-arm64.tar.gz" 
            "kubectl-mtv-${VERSION}-darwin-amd64.tar.gz"
            "kubectl-mtv-${VERSION}-darwin-arm64.tar.gz"
            "kubectl-mtv-${VERSION}-windows-amd64.zip"
            "mcp-servers-${VERSION}-linux-amd64.tar.gz"
            "mcp-servers-${VERSION}-linux-arm64.tar.gz"
            "mcp-servers-${VERSION}-darwin-amd64.tar.gz"
            "mcp-servers-${VERSION}-darwin-arm64.tar.gz"
            "mcp-servers-${VERSION}-windows-amd64.zip"
          )
          
          echo "Verifying release assets are downloadable..."
          for asset in "${ASSETS[@]}"; do
            url="https://github.com/yaacov/kubectl-mtv/releases/download/${VERSION}/${asset}"
            echo "Checking: $url"
            if curl -sSL --fail -I "$url" > /dev/null; then
              echo "✅ $asset is available"
            else
              echo "❌ $asset is not available"
              exit 1
            fi
          done
          echo "All assets verified successfully!"

      - name: Update Krew index
        uses: rajatjindal/krew-release-bot@v0.0.46
