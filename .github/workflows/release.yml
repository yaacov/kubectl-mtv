name: Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Multi-Platform Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          cd mcp
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build multi-platform binaries and archives
        run: make dist-all
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: Build MCP servers
        run: |
          cd mcp
          make dist-servers

      - name: Upload release assets
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        with:
          files: |
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-amd64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-amd64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-arm64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-linux-arm64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-amd64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-amd64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-arm64.tar.gz
            kubectl-mtv-${{ github.event.release.tag_name }}-darwin-arm64.tar.gz.sha256sum
            kubectl-mtv-${{ github.event.release.tag_name }}-windows-amd64.zip
            kubectl-mtv-${{ github.event.release.tag_name }}-windows-amd64.zip.sha256sum
            mcp/kubectl-mtv-mcp-servers-linux-amd64.tar.gz
            mcp/kubectl-mtv-mcp-servers-linux-amd64.tar.gz.sha256sum

      - name: Wait for assets to be available
        run: |
          echo "Waiting 30 seconds for GitHub to propagate release assets..."
          sleep 30

      - name: Verify all assets are available
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          ASSETS=(
            "kubectl-mtv-${VERSION}-linux-amd64.tar.gz"
            "kubectl-mtv-${VERSION}-linux-arm64.tar.gz" 
            "kubectl-mtv-${VERSION}-darwin-amd64.tar.gz"
            "kubectl-mtv-${VERSION}-darwin-arm64.tar.gz"
            "kubectl-mtv-${VERSION}-windows-amd64.zip"
          )
          
          echo "Verifying release assets are downloadable..."
          for asset in "${ASSETS[@]}"; do
            url="https://github.com/yaacov/kubectl-mtv/releases/download/${VERSION}/${asset}"
            echo "Checking: $url"
            if curl -sSL --fail -I "$url" > /dev/null; then
              echo "✅ $asset is available"
            else
              echo "❌ $asset is not available"
              exit 1
            fi
          done
          echo "All assets verified successfully!"

      - name: Update Krew index
        uses: rajatjindal/krew-release-bot@v0.0.46
